@{
    Layout = "~/_Layout.cshtml";
    Page.Title = string.Format("Razor - {0}", "CRUD-Insert-with-Validation");

    //consider your need for global variables
    var title = "";
    var artist = "";
    var year = "";
    var label = "";


    //obtain two lists: SupplierList and CategoryList
    var db = Database.Open("CHINOOK");


    var artistquery = "SELECT ArtistId, Name "
            + "FROM Artists "
            + "Order by Name";
    var artistlist = db.Query(artistquery);

    var albumquery = "SELECT AlbumId, Title "
            + "FROM Albums "
            + "Order by Title";
    var albumlist = db.Query(albumquery);

    var yearquery = "SELECT ReleaseYear "
            + "FROM Albums "
            + "Order by ReleaseYear";
    var yearlist = db.Query(yearquery);


    var labelquery = "SELECT ReleaseLabel "
            + "FROM Albums "
            + "Order by ReleaseLabel";
    var labellist = db.Query(labelquery);


    //these are validator controls that execute on the server side

    Validation.Add("Title",
    Validator.Required("Title is required"),
    Validator.StringLength(160, 1, "Limited to 160 characters"));

    Validation.Add("ArtistId",
          Validator.Range(1, 275, "Select an Artist"));

    //QuantityPerUnit is nullable which means 0 required characters
    Validation.Add("ReleaseYear",
        Validator.Required("Year is out of range, 1950 to today"),
         Validator.StringLength(DateTime.Today.Year));

    Validation.Add("ReleaseLabel",
        Validator.StringLength(50, 1, "Label is limited to 50 characters"));

}

@section head{
    <link href="~/Content/MyCssCopy.css" rel="stylesheet" />
}

@section banner{
    <h1>@Page.Title</h1>
}

@if (IsPost)
{
    // retreive the data from the form
    title = Request.Form["Title"];
    artist = Request.Form["Artist"];
    year = Request.Form["Year"];
    label = Request.Form["Label"];

    var thebutton = Request.Form["FormButton"];

    if (thebutton.Equals("Clear"))
    {
        title = "";
        artist = "0";
        year = "";
        label = "";

    }
    else
    {
        //Validation of data
        //Validation.IsValid() is used to execute the server side validation
        //the if statement DOES NOT need an else as the Validation control
        //message will appear in your Summary() or Message() controls
        if (Validation.IsValid())  //good data
        {
            try
            {
                var inscommand = @"INSERT INTO Albums (Title, ArtistId, ReleasedYear, ReleaseLabel)
                VALUES(@0, @1, @2, @3)";
                db.Execute(inscommand, title,
                    artist.Equals("0") ? null : artist,
                    string.IsNullOrEmpty(title) ? null : title,
                    string.IsNullOrEmpty(year) ? null : year,
                    string.IsNullOrEmpty(label) ? null : label);
                <div class="col-12 text-center">
                    <p style="color:green">
                        Album has been added
                    </p>
                </div>
            }
            catch (Exception ex)
            {
                <div class="col-12 text-center">
                    <p style="color:firebrick; font-size:large">
                        Processing error: @ex.Message
                    </p>
                </div>
            }
        }
    }
}
else
{

}

@Html.ValidationSummary()

<form id="theForm" action="" method="post">
    <div class="row row-cols-2">

        @*Title Box*@
        <div class="col text-right">
            <label id="lblTitle" for="Title">Title</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Title" value="@title" />
        </div><br />

        @*Artist Box*@
        <div class="col text-right">
            <label id="lblArtist" for="artist">Artist</label>
        </div>
        <div class="col text-left">
            <select name="Artist">
                <option value="0">select...</option>
                @foreach (var acollectionrow in artistlist)
                {
                    if (acollectionrow.ArtistID.ToString() == artist)
                    {
                        <option value="@acollectionrow[0]" selected>@acollectionrow[1]</option>
                    }
                    else
                    {
                        <option value="@acollectionrow[0]">@acollectionrow[1]</option>
                    }
                }
            </select>
        </div><br />

        @*Year Box*@
        <div class="col text-right">
            <label id="lblYear" for="Year">Year</label>
        </div>
        <div class="col text-left">
            <input type="number" name="Year" value="@year" />
        </div><br />

        @*label Box*@
        <div class="col text-right">
            <label id="lblLabel" for="Label">Label</label>
        </div>
        <div class="col text-left">
            <input type="text" name="Label" value="@label" />
        </div><br />
    </div>
    <div class="row">
        <div class="col-12 text-center">
            <input type="submit" id="theAdd" name="FormButton"
                   class="btn btn-primary" value="Add" />
            <input type="submit" id="theClear" name="FormButton" formnovalidate
                   class="btn" value="Clear" />
        </div>
    </div>
    @* confirmation can be done on a button click using javascript
        we will ask the user to confirm the insertion of a product*@
    <script type="text/javascript">
        document.getElementById("theAdd").onclick = ConfirmAdd;
        function ConfirmAdd() {
            return confirm("Are you sure you want to ADD @title?");
        }
    </script>
</form>